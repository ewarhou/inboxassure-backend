InboxAssure API Documentation
=========================

Base URL: http://inboxassure-backend.imnodev.com/api

Authentication
-------------
All authenticated endpoints require a Bearer token in the Authorization header:
Authorization: Bearer <access_token>

Endpoints
---------

1. Register New User
-------------------
POST /auth/register

Request Body:
{
    "username": "string",
    "email": "string",
    "password": "string",
    "first_name": "string" (optional),
    "last_name": "string" (optional)
}

Response (200):
{
    "access_token": "string",
    "token_type": "bearer"
}

Response (400):
{
    "detail": "error message"
}

Notes:
- Email must exist in the client database
- Username and email must be unique
- Password should be secure

2. Login
--------
POST /auth/login

Request Body:
{
    "username": "string",
    "password": "string"
}

Response (200):
{
    "access_token": "string",
    "token_type": "bearer"
}

Response (401):
{
    "detail": "Invalid credentials"
}

Notes:
- Token expires after 24 hours
- Use the returned token in the Authorization header for authenticated requests 

3. Password Reset Request
------------------------
POST /auth/password-reset-request

Request Body:
{
    "email": "string"
}

Response (200):
{
    "message": "Password reset email sent"
}

Response (404):
{
    "message": "User with this email does not exist"
}

Notes:
- Sends a password reset email with a reset link
- Link expires in 1 hour
- Link format: http://inboxassure.online/reset-password?token=<reset_token>

4. Verify Reset Token
--------------------
POST /auth/password-reset-verify

Request Body:
{
    "token": "string"
}

Response (200):
{
    "valid": true
}

OR

Response (200):
{
    "valid": false,
    "message": "Token has expired or has been used"
}

Response (404):
{
    "message": "Invalid token"
}

Notes:
- Use this to verify token before showing password reset form
- Tokens expire after 1 hour
- Tokens can only be used once

5. Reset Password
----------------
POST /auth/password-reset-confirm

Request Body:
{
    "token": "string",
    "new_password": "string"
}

Response (200):
{
    "message": "Password has been reset successfully"
}

Response (400):
{
    "message": "Token has expired or has been used"
}

Response (404):
{
    "message": "Invalid token"
}

Notes:
- Token is invalidated after successful password reset
- New password must meet security requirements

Mock Data for UI Development
===========================

1. Mock User for Registration
----------------------------
{
    "username": "john.doe",
    "email": "john.doe@example.com",
    "password": "SecurePass123!",
    "first_name": "John",
    "last_name": "Doe"
}

2. Mock Successful Registration Response
--------------------------------------
{
    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6ImpvaG4uZG9lIiwiZXhwIjoxNzA5NDU2Nzg5LCJpYXQiOjE3MDkzNzAzODl9.mock-token-hash",
    "token_type": "bearer"
}

3. Mock Registration Error Responses
----------------------------------
Email not found:
{
    "detail": "Email not found in our client database. Please contact support."
}

Email already registered:
{
    "detail": "Email already registered"
}

Username taken:
{
    "detail": "Username already registered"
}

4. Mock Login Credentials
------------------------
{
    "username": "john.doe",
    "password": "SecurePass123!"
}

5. Mock Login Success Response
----------------------------
{
    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6ImpvaG4uZG9lIiwiZXhwIjoxNzA5NDU2Nzg5LCJpYXQiOjE3MDkzNzAzODl9.mock-token-hash",
    "token_type": "bearer"
}

6. Mock Login Error Response
---------------------------
{
    "detail": "Invalid credentials"
}

7. Mock Headers for Authenticated Requests
----------------------------------------
{
    "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6ImpvaG4uZG9lIiwiZXhwIjoxNzA5NDU2Nzg5LCJpYXQiOjE3MDkzNzAzODl9.mock-token-hash"
}

8. Mock Password Reset Request
----------------------------
Request:
{
    "email": "john.doe@example.com"
}

Success Response:
{
    "message": "Password reset email sent"
}

Error Response:
{
    "message": "User with this email does not exist"
}

9. Mock Reset Token
------------------
Valid token for testing:
"550e8400-e29b-41d4-a716-446655440000"

Mock reset link:
http://inboxassure.online/reset-password?token=550e8400-e29b-41d4-a716-446655440000

10. Mock Token Verification
---------------------------
Request:
{
    "token": "550e8400-e29b-41d4-a716-446655440000"
}

Valid Token Response:
{
    "valid": true
}

Expired Token Response:
{
    "valid": false,
    "message": "Token has expired or has been used"
}

Invalid Token Response:
{
    "message": "Invalid token"
}

11. Mock Password Reset
-----------------------
Request:
{
    "token": "550e8400-e29b-41d4-a716-446655440000",
    "new_password": "NewSecurePass123!"
}

Success Response:
{
    "message": "Password has been reset successfully"
}

Error Response (Expired/Used Token):
{
    "message": "Token has expired or has been used"
}

Error Response (Invalid Token):
{
    "message": "Invalid token"
}

12. Mock Static Pages Content
----------------------------
About Us:
{
    "title": "About InboxAssure",
    "content": "InboxAssure is a leading email deliverability platform that helps businesses ensure their emails reach the intended recipients' inboxes. Our advanced tools and expert guidance help improve email deliverability rates and maintain sender reputation.",
    "mission": "Our mission is to make email deliverability simple and reliable for businesses of all sizes.",
    "features": [
        "Advanced Email Testing",
        "Deliverability Monitoring",
        "Reputation Management",
        "Real-time Analytics",
        "Expert Support"
    ]
}

Contact Us:
{
    "address": "123 Email Street, Digital City, DC 12345",
    "phone": "+1 (555) 123-4567",
    "email": "support@inboxassure.com",
    "hours": "Monday - Friday: 9:00 AM - 6:00 PM EST",
    "social_media": {
        "twitter": "@inboxassure",
        "linkedin": "inboxassure",
        "facebook": "InboxAssure"
    }
}

Pricing Plans:
[
    {
        "name": "Starter",
        "price": "$49/month",
        "features": [
            "1,000 email tests/month",
            "Basic analytics",
            "Email support",
            "Standard reports"
        ]
    },
    {
        "name": "Professional",
        "price": "$149/month",
        "features": [
            "10,000 email tests/month",
            "Advanced analytics",
            "Priority support",
            "Custom reports",
            "API access"
        ]
    },
    {
        "name": "Enterprise",
        "price": "Custom",
        "features": [
            "Unlimited email tests",
            "Full analytics suite",
            "24/7 dedicated support",
            "Custom integration",
            "Dedicated IP pools",
            "SLA guarantee"
        ]
    }
]

FAQ:
[
    {
        "question": "What is email deliverability?",
        "answer": "Email deliverability is the ability to deliver emails to subscribers' inboxes. It's determined by various factors including sender reputation, email content, and technical setup."
    },
    {
        "question": "How does InboxAssure improve email deliverability?",
        "answer": "We provide tools to test, monitor, and optimize your email campaigns before sending. This includes spam testing, content analysis, and infrastructure verification."
    },
    {
        "question": "Do you offer a trial period?",
        "answer": "Yes, we offer a 14-day free trial on all our plans. No credit card required."
    },
    {
        "question": "Can I upgrade or downgrade my plan?",
        "answer": "Yes, you can change your plan at any time. Changes take effect on your next billing cycle."
    }
] 