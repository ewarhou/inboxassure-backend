# InboxAssure Backend API Documentation

Base URL: `http://inboxassure-backend.imnodev.com/api`

## Authentication Endpoints
// ... existing code ...

## Profile Endpoints

### Get Profile
- **URL**: `/api/profile`
- **Method**: `GET`
- **Description**: Get the current user's profile information
- **Headers**: 
  - `Authorization`: `Bearer <token>`
- **Success Response**:
  - **Code**: 200
  - **Content**:
    ```json
    {
      "id": "integer",
      "email": "string",
      "username": "string",
      "first_name": "string",
      "last_name": "string",
      "profile_picture": "string (URL)",
      "phone_number": "string",
      "is_active": "boolean",
      "created_at": "datetime"
    }
    ```
- **Error Response**:
  - **Code**: 401
  - **Content**:
    ```json
    {
      "detail": "Authentication credentials were not provided"
    }
    ```

### Update Profile
- **URL**: `/api/profile`
- **Method**: `PUT`
- **Description**: Update the current user's profile information
- **Headers**: 
  - `Authorization`: `Bearer <token>`
- **Request Body**:
  ```json
  {
    "first_name": "string",
    "last_name": "string",
    "phone_number": "string"
  }
  ```
- **Success Response**:
  - **Code**: 200
  - **Content**:
    ```json
    {
      "id": "integer",
      "email": "string",
      "username": "string",
      "first_name": "string",
      "last_name": "string",
      "profile_picture": "string (URL)",
      "phone_number": "string",
      "is_active": "boolean",
      "created_at": "datetime"
    }
    ```

### Upload Profile Picture
- **URL**: `/api/profile/picture`
- **Method**: `PUT`
- **Description**: Upload or update profile picture
- **Headers**: 
  - `Authorization`: `Bearer <token>`
  - `Content-Type`: `multipart/form-data`
- **Request Body**:
  - `picture`: File (image)
- **Success Response**:
  - **Code**: 200
  - **Content**:
    ```json
    {
      "profile_picture": "string (URL)"
    }
    ```
- **Error Response**:
  - **Code**: 400
  - **Content**:
    ```json
    {
      "detail": "Invalid image format"
    }
    ```

## Password Management

### Change Password
- **URL**: `/api/auth/change-password`
- **Method**: `POST`
- **Description**: Change the current user's password
- **Headers**: 
  - `Authorization`: `Bearer <token>`
- **Request Body**:
  ```json
  {
    "current_password": "string",
    "new_password": "string"
  }
  ```
- **Success Response**:
  - **Code**: 200
  - **Content**:
    ```json
    {
      "detail": "Password changed successfully"
    }
    ```
- **Error Response**:
  - **Code**: 400
  - **Content**:
    ```json
    {
      "detail": "Current password is incorrect"
    }
    ```

### Reset Password Request
- **URL**: `/api/auth/reset-password-request`
- **Method**: `POST`
- **Description**: Request a password reset link
- **Request Body**:
  ```json
  {
    "email": "string"
  }
  ```
- **Success Response**:
  - **Code**: 200
  - **Content**:
    ```json
    {
      "detail": "Password reset link sent to your email"
    }
    ```

### Reset Password
- **URL**: `/api/auth/reset-password`
- **Method**: `POST`
- **Description**: Reset password using token received in email
- **Request Body**:
  ```json
  {
    "token": "string",
    "new_password": "string"
  }
  ```
- **Success Response**:
  - **Code**: 200
  - **Content**:
    ```json
    {
      "detail": "Password reset successful"
    }
    ```
- **Error Response**:
  - **Code**: 400
  - **Content**:
    ```json
    {
      "detail": "Invalid or expired token"
    }
    ```
