# InboxAssure Backend API Documentation

## Webhooks

Webhooks allow you to receive automated notifications when certain events occur in InboxAssure. Currently, webhooks are supported for spamcheck completion events.

### Webhook Payload Format

When a spamcheck is completed, InboxAssure will send a POST request to your configured webhook URL with the following JSON payload:

```json
{
  "event": "spamcheck.completed",
  "spamcheck": {
    "id": 123,
    "name": "Test Campaign",
    "status": "completed",
    "created_at": "2024-03-27T15:30:00Z",
    "updated_at": "2024-03-27T16:30:00Z", 
    "is_domain_based": true,
    "subject": "Test Subject",
    "body": "Test Email Body",
    "conditions": "google>=0.5 and outlook>=0.5 sending=25/3"
  },
  "overall_results": {
    "total_accounts": 100,
    "good_accounts": 75,
    "bad_accounts": 25,
    "good_accounts_percentage": 75.0,
    "bad_accounts_percentage": 25.0,
    "average_google_score": 0.85,
    "average_outlook_score": 0.78,
    "total_bounced": 5,
    "total_unique_replies": 20,
    "total_emails_sent": 1000
  },
  "reports": [
    {
      "id": "uuid-1",
      "email_account": "test@example.com",
      "google_pro_score": 0.9,
      "outlook_pro_score": 0.8,
      "report_link": "https://app.emailguard.io/inbox-placement-tests/...",
      "is_good": true,
      "sending_limit": 25,
      "tags_list": "tag1,tag2",
      "workspace_name": "Workspace 1",
      "bounced_count": 0,
      "unique_replied_count": 2,
      "emails_sent_count": 10,
      "created_at": "2024-03-27T16:30:00Z",
      "updated_at": "2024-03-27T16:30:00Z"
    },
    // Additional accounts...
  ]
}
```

### Setting Up Webhooks

To receive webhook notifications, you need to configure a webhook URL in your InboxAssure account. Your webhook endpoint should:

1. Accept POST requests
2. Return a 200 HTTP status code to acknowledge receipt
3. Process the webhook asynchronously if the processing is time-consuming
4. Verify the webhook payload format before processing
5. Implement proper error handling

### Webhook Management API Endpoints

#### Get Webhook URL

```
GET /api/settings/webhook
```

Returns the currently configured webhook URL for the authenticated user.

**Response:**
```json
{
  "success": true,
  "webhook_url": "https://your-webhook-endpoint.com/inboxassure-webhook"
}
```

#### Create/Update Webhook URL

```
POST /api/settings/webhook
```

**Request Body:**
```json
{
  "webhook_url": "https://your-webhook-endpoint.com/inboxassure-webhook"
}
```

**Response:**
```json
{
  "success": true,
  "message": "Webhook URL created successfully",
  "webhook_url": "https://your-webhook-endpoint.com/inboxassure-webhook"
}
```

#### Update Webhook URL

```
PUT /api/settings/webhook
```

**Request Body:**
```json
{
  "webhook_url": "https://your-new-webhook-endpoint.com/inboxassure-webhook"
}
```

**Response:**
```json
{
  "success": true,
  "message": "Webhook URL updated successfully",
  "webhook_url": "https://your-new-webhook-endpoint.com/inboxassure-webhook"
}
```

#### Delete Webhook URL

```
DELETE /api/settings/webhook
```

**Response:**
```json
{
  "success": true,
  "message": "Webhook URL deleted successfully"
}
```

#### Test Webhook

```
POST /api/settings/test-webhook
```

Sends a test webhook payload to verify your webhook endpoint is correctly set up.

**Request Body:**
```json
{
  "webhook_url": "https://your-webhook-endpoint.com/inboxassure-webhook",
  "save_to_settings": true  // Optional, defaults to false
}
```

**Response:**
```json
{
  "success": true,
  "status_code": 200,
  "message": "Webhook test sent successfully and received 200 OK response.",
  "webhook_url": "https://your-webhook-endpoint.com/inboxassure-webhook",
  "saved_to_settings": true
}
```
