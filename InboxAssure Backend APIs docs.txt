# InboxAssure Backend API Documentation

## Webhooks

Webhooks allow you to receive automated notifications when certain events occur in InboxAssure. Currently, webhooks are supported for spamcheck completion events.

### Webhook Payload Format

When a spamcheck is completed, InboxAssure will send a POST request to your configured webhook URL with the following JSON payload:

```json
{
  "event": "spamcheck.completed",
  "spamcheck": {
    "id": 123,
    "name": "Test Campaign",
    "status": "completed",
    "created_at": "2024-03-27T15:30:00Z",
    "updated_at": "2024-03-27T16:30:00Z", 
    "is_domain_based": true,
    "subject": "Test Subject",
    "body": "Test Email Body",
    "conditions": "google>=0.5 and outlook>=0.5 sending=25/3"
  },
  "overall_results": {
    "total_accounts": 100,
    "good_accounts": 75,
    "bad_accounts": 25,
    "good_accounts_percentage": 75.0,
    "bad_accounts_percentage": 25.0,
    "average_google_score": 0.85,
    "average_outlook_score": 0.78,
    "total_bounced": 5,
    "total_unique_replies": 20,
    "total_emails_sent": 1000
  },
  "reports": [
    {
      "id": "uuid-1",
      "email_account": "test@example.com",
      "google_pro_score": 0.9,
      "outlook_pro_score": 0.8,
      "report_link": "https://app.emailguard.io/inbox-placement-tests/...",
      "is_good": true,
      "sending_limit": 25,
      "tags_list": "tag1,tag2",
      "workspace_name": "Workspace 1",
      "bounced_count": 0,
      "unique_replied_count": 2,
      "emails_sent_count": 10,
      "created_at": "2024-03-27T16:30:00Z",
      "updated_at": "2024-03-27T16:30:00Z"
    },
    // Additional accounts...
  ]
}
```

### Setting Up Webhooks

To receive webhook notifications, you need to configure a webhook URL in your InboxAssure account. Your webhook endpoint should:

1. Accept POST requests
2. Return a 200 HTTP status code to acknowledge receipt
3. Process the webhook asynchronously if the processing is time-consuming
4. Verify the webhook payload format before processing
5. Implement proper error handling

### Webhook Management API Endpoints

#### Get Webhook URL

```
GET /api/settings/webhook
```

Returns the currently configured webhook URL for the authenticated user.

**Response:**
```json
{
  "success": true,
  "webhook_url": "https://your-webhook-endpoint.com/inboxassure-webhook"
}
```

#### Create/Update Webhook URL

```
POST /api/settings/webhook
```

**Request Body:**
```json
{
  "webhook_url": "https://your-webhook-endpoint.com/inboxassure-webhook"
}
```

**Response:**
```json
{
  "success": true,
  "message": "Webhook URL created successfully",
  "webhook_url": "https://your-webhook-endpoint.com/inboxassure-webhook"
}
```

#### Update Webhook URL

```
PUT /api/settings/webhook
```

**Request Body:**
```json
{
  "webhook_url": "https://your-new-webhook-endpoint.com/inboxassure-webhook"
}
```

**Response:**
```json
{
  "success": true,
  "message": "Webhook URL updated successfully",
  "webhook_url": "https://your-new-webhook-endpoint.com/inboxassure-webhook"
}
```

#### Delete Webhook URL

```
DELETE /api/settings/webhook
```

**Response:**
```json
{
  "success": true,
  "message": "Webhook URL deleted successfully"
}
```

#### Test Webhook

```
POST /api/settings/test-webhook
```

Sends a test webhook payload to verify your webhook endpoint is correctly set up.

**Request Body:**
```json
{
  "webhook_url": "https://your-webhook-endpoint.com/inboxassure-webhook",
  "save_to_settings": true  // Optional, defaults to false
}
```

**Response:**
```json
{
  "success": true,
  "status_code": 200,
  "message": "Webhook test sent successfully and received 200 OK response.",
  "webhook_url": "https://your-webhook-endpoint.com/inboxassure-webhook",
  "saved_to_settings": true
}
```

## Error Logs

The Error Logs API allows you to retrieve and filter spamcheck error logs, especially for accounts that failed to send emails during spamcheck execution.

### Get Error Logs

```
GET /api/spamcheck/error-logs
```

Returns a paginated list of error logs with various filtering options.

**Query Parameters:**
- `spamcheck_id` (optional): Filter by spamcheck ID
- `account_email` (optional): Filter by account email
- `provider` (optional): Filter by provider (bison, instantly, emailguard, system)
- `error_type` (optional): Filter by error type
- `workspace` (optional): Filter by workspace/organization ID
- `search` (optional): Search term for spamcheck name or error message
- `start_date` (optional): Filter by created_at >= start_date (format: 'YYYY-MM-DD')
- `end_date` (optional): Filter by created_at <= end_date (format: 'YYYY-MM-DD')
- `latest_per_account` (optional, default=true): If true, return only the most recent error for each account
- `fetch_account_details` (optional, default=true): If true, fetch workspace and tags from Bison API
- `page` (optional, default=1): Page number
- `per_page` (optional, default=25): Results per page

**Response:**
```json
{
  "success": true,
  "message": "Error logs retrieved successfully",
  "error_logs": [
    {
      "id": 1,
      "error_type": "server_error",
      "provider": "bison",
      "error_message": "Failed to send email due to server error",
      "error_details": {"status": 500, "details": "Internal Server Error"},
      "account_email": "test@example.com",
      "step": "send_email",
      "api_endpoint": "/api/v1/send",
      "status_code": 500,
      "workspace_id": "12345",
      "tags": ["important", "marketing"],
      "created_at": "2023-08-15T12:34:56Z",
      "bison_spamcheck_id": 123,
      "spamcheck_id": null,
      "spamcheck_name": "My Spamcheck Campaign",
      "user_id": 1
    }
  ],
  "pagination": {
    "current_page": 1,
    "total_pages": 5,
    "total_items": 120,
    "per_page": 25
  }
}
```

### Error Types

The error logs can include the following error types:

- `api_error`: Errors returned by external APIs
- `server_error`: Server-side errors from external services
- `validation_error`: Data validation errors
- `connection_error`: Network connection issues
- `authentication_error`: Authentication failures
- `timeout_error`: Request timeout issues
- `unknown_error`: Unclassified errors

### Error Log Fields

- `id`: Unique identifier for the error log
- `error_type`: Type of error (see above)
- `provider`: Service provider where the error occurred (bison, instantly, emailguard, system)
- `error_message`: Human-readable error message
- `error_details`: Additional details about the error in JSON format
- `account_email`: The email account being processed when the error occurred
- `step`: The step in the process where the error occurred
- `api_endpoint`: The API endpoint that returned the error
- `status_code`: The HTTP status code returned by the API
- `workspace_id`: The ID of the workspace this account belongs to
- `tags`: Array of tags associated with the account
- `created_at`: When the error was logged
- `bison_spamcheck_id`: ID of the Bison spamcheck (if applicable)
- `spamcheck_id`: ID of the regular spamcheck (if applicable)
- `spamcheck_name`: Name of the spamcheck
- `user_id`: User ID who owns the spamcheck
