# InboxAssure Backend API Documentation

## Updated Spamcheck Endpoints

### Create Spamcheck Bison

**Endpoint:** `POST /api/spamcheck/create-spamcheck-bison`

**Authentication:** Bearer Token

**Description:** Create a new spamcheck with accounts for Bison. The spamcheck will be created with 'queued' status and will be processed according to the queueing system.

**Request Body:** JSON object with the following fields:
- `name`: Name of the spamcheck
- `user_organization_id`: ID of the Bison organization to use
- `account_selection_type`: Type of account selection ('specific', 'all', or 'tag_based')
- `accounts`: List of email accounts to check (e.g. ["test1@example.com", "test2@example.com"]), required when account_selection_type is 'specific'
- `include_tags`: List of tags to include when account_selection_type is 'tag_based' (e.g. ["important", "marketing"])
- `exclude_tags`: List of tags to exclude when account_selection_type is 'tag_based' (e.g. ["test", "development"])
- `campaign_copy_source_id`: Optional ID of a Bison campaign to copy email content from
- `text_only`: Whether to send text-only emails
- `subject`: Email subject template
- `body`: Email body template
- `scheduled_at`: When to run the spamcheck
- `recurring_days`: Optional, number of days for recurring checks
- `weekdays`: Optional, list of weekdays (0=Monday, 6=Sunday) when this spamcheck should run
- `is_domain_based`: Whether to filter accounts by domain
- `conditions`: Optional, conditions for sending
- `reports_waiting_time`: Optional, reports waiting time
- `update_sending_limit`: Optional, whether to update sending limits in Bison API based on scores

**Response:** Creation result with the following fields:
- `success`: Boolean indicating if the creation was successful
- `message`: Status message
- `data`: Created spamcheck details with:
  - `id`: Spamcheck ID
  - `name`: Spamcheck name
  - `status`: Status (always 'queued' for new spamchecks)
  - `account_selection_type`: Type of account selection used
  - `accounts_count`: Number of accounts added to the spamcheck
  - `weekdays`: List of weekdays when the spamcheck should run
  - `update_sending_limit`: Whether to update sending limits in Bison API based on scores

**Example Response:**
```json
{
  "success": true,
  "message": "Spamcheck created successfully",
  "data": {
    "id": 123,
    "name": "Weekly Deliverability Test",
    "status": "queued",
    "account_selection_type": "tag_based",
    "accounts_count": 50,
    "weekdays": [0, 3],
    "update_sending_limit": true
  }
}
```

### Update Bison Spamcheck

**Endpoint:** `PUT /api/spamcheck/update-spamcheck-bison/{spamcheck_id}`

**Authentication:** Bearer Token

**Description:** Update an existing Bison spamcheck's details, including name, email content, and configuration settings. Only works if the current status is queued, pending, failed, completed, paused, or waiting_for_reports.

**Parameters:**
- `spamcheck_id`: ID of the spamcheck to update

**Request Body:** JSON object with the following optional fields:
- `name`: New name for the spamcheck
- `account_selection_type`: Type of account selection ('specific', 'all', or 'tag_based')
- `accounts`: New list of email accounts to check (required when account_selection_type is 'specific')
- `include_tags`: List of tags to include when account_selection_type is 'tag_based'
- `exclude_tags`: List of tags to exclude when account_selection_type is 'tag_based'
- `campaign_copy_source_id`: ID of a Bison campaign to copy email content from
- `text_only`: Whether to send text-only emails
- `subject`: New email subject template
- `body`: New email body template
- `scheduled_at`: New scheduled time (ISO format)
- `recurring_days`: New recurring days setting
- `weekdays`: List of weekdays (0=Monday, 6=Sunday) when this spamcheck should run
- `is_domain_based`: Whether to filter accounts by domain
- `conditions`: Conditions for sending (e.g., 'google>=0.5andoutlook>=0.5')
- `reports_waiting_time`: Time in hours to wait before generating reports
- `update_sending_limit`: Whether to update sending limits in Bison API based on scores

**Response:** Update result with the following fields:
- `success`: Boolean indicating if the update was successful
- `message`: Status message
- `data`: Updated spamcheck details with:
  - `id`: Spamcheck ID
  - `name`: Updated spamcheck name
  - `status`: Current status
  - `account_selection_type`: Type of account selection used
  - `fields_updated`: List of fields that were updated

**Example Request:**
```json
{
  "name": "Updated Weekly Test",
  "account_selection_type": "tag_based",
  "include_tags": ["important", "marketing"],
  "exclude_tags": ["test"],
  "weekdays": [1, 3, 5],
  "update_sending_limit": true
}
```

**Example Response:**
```json
{
  "success": true,
  "message": "Spamcheck updated successfully",
  "data": {
    "id": 123,
    "name": "Updated Weekly Test",
    "status": "queued",
    "account_selection_type": "tag_based",
    "fields_updated": ["name", "account_selection_type", "include_tags", "exclude_tags", "weekdays", "update_sending_limit", "updated_at"]
  }
}
```
