# InboxAssure Backend API Documentation

Base URL: `http://inboxassure-backend.imnodev.com/api`

## Spamcheck Endpoints

### List Accounts
**Endpoint:** `POST /spamcheck/list-accounts`
**Authentication:** Bearer Token Required

Retrieves a list of email accounts from either Instantly or Bison platform with filtering options.

#### Request Parameters
- `organization_id` (integer, required): The ID of the organization to fetch accounts from
- `payload` (object, required):
  ```json
  {
    "platform": "string",     // "instantly" or "bison"
    "search": "string",       // Optional: Search term for filtering accounts
    "ignore_tag": "string",   // Optional: Tag to exclude from results
    "is_active": "boolean",   // Optional: Filter only active accounts
    "limit": "integer"        // Optional: Maximum number of accounts to return
  }
  ```

#### Response Format
```json
{
  "success": "boolean",
  "message": "string",
  "data": {
    "organization_id": "integer",
    "organization_name": "string",
    "total_accounts": "integer",
    "accounts": ["string"]    // Array of email addresses
  }
}
```

#### Success Response Example
```json
{
  "success": true,
  "message": "Accounts retrieved successfully",
  "data": {
    "organization_id": 123,
    "organization_name": "My Organization",
    "total_accounts": 2,
    "accounts": ["email1@domain.com", "email2@domain.com"]
  }
}
```

#### Error Response Example
```json
{
  "success": false,
  "message": "Organization not found or you don't have permission to access it.",
  "data": {
    "organization_id": 123,
    "organization_name": "",
    "total_accounts": 0,
    "accounts": []
  }
}
```

#### Notes
- For Instantly platform:
  - Requires valid Instantly organization token
  - Active accounts have status = 1
  - Includes tag filtering support
  
- For Bison platform:
  - Requires valid Bison API key
  - Active accounts have status = "Connected"
  - Supports pagination (automatically fetches all pages)
  - Includes tag filtering support

#### Error Conditions
- Organization not found
- Organization exists but is not active
- Invalid or expired authentication token
- API errors from Instantly/Bison platforms
- Network timeouts (30-second timeout limit)

### List Spamchecks
**Endpoint:** `GET /spamcheck/list-spamchecks`
**Authentication:** Bearer Token Required

Retrieves all spamchecks for the authenticated user with their details.

#### Response Format
```json
{
  "success": "boolean",
  "message": "string",
  "data": [
    {
      "id": "integer",
      "name": "string",
      "status": "string",
      "scheduled_at": "datetime",
      "recurring_days": "integer",
      "is_domain_based": "boolean",
      "conditions": "json",
      "reports_waiting_time": "integer",
      "created_at": "datetime",
      "updated_at": "datetime",
      "user_organization_id": "integer",
      "organization_name": "string",
      "accounts_count": "integer",
      "campaigns_count": "integer",
      "options": {
        "open_tracking": "boolean",
        "link_tracking": "boolean",
        "text_only": "boolean",
        "subject": "string",
        "body": "string"
      }
    }
  ]
}
```

#### Success Response Example
```json
{
  "success": true,
  "message": "Successfully retrieved 2 spamchecks",
  "data": [
    {
      "id": 1,
      "name": "Daily Check",
      "status": "active",
      "scheduled_at": "2024-02-20T10:00:00Z",
      "recurring_days": 1,
      "is_domain_based": false,
      "conditions": {},
      "reports_waiting_time": 30,
      "created_at": "2024-02-19T15:00:00Z",
      "updated_at": "2024-02-19T15:00:00Z",
      "user_organization_id": 123,
      "organization_name": "My Organization",
      "accounts_count": 5,
      "campaigns_count": 2,
      "options": {
        "open_tracking": true,
        "link_tracking": true,
        "text_only": false,
        "subject": "Test Subject",
        "body": "Test Body"
      }
    }
  ]
}
```

#### Error Response Example
```json
{
  "success": false,
  "message": "Error retrieving spamchecks: [error details]",
  "data": []
}
```
