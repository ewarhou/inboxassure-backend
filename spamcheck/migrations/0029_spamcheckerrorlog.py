# Generated by Django 5.0.2 on 2025-02-27 23:30

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('spamcheck', '0028_userspamcheckbisonreport_workspace_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SpamcheckErrorLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('error_type', models.CharField(choices=[('api_error', 'API Error'), ('connection_error', 'Connection Error'), ('authentication_error', 'Authentication Error'), ('validation_error', 'Validation Error'), ('timeout_error', 'Timeout Error'), ('unknown_error', 'Unknown Error')], default='unknown_error', max_length=50)),
                ('provider', models.CharField(choices=[('instantly', 'Instantly'), ('emailguard', 'EmailGuard'), ('bison', 'Bison'), ('system', 'System')], default='system', max_length=20)),
                ('error_message', models.TextField(help_text='The error message returned by the API or system')),
                ('error_details', models.JSONField(blank=True, help_text='Additional details about the error in JSON format', null=True)),
                ('account_email', models.EmailField(blank=True, help_text='The email account being processed when the error occurred', max_length=254, null=True)),
                ('step', models.CharField(blank=True, help_text='The step in the process where the error occurred', max_length=255, null=True)),
                ('api_endpoint', models.CharField(blank=True, help_text='The API endpoint that returned the error', max_length=255, null=True)),
                ('status_code', models.IntegerField(blank=True, help_text='The HTTP status code returned by the API', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bison_spamcheck', models.ForeignKey(blank=True, help_text='The Bison spamcheck that encountered the error', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='error_logs', to='spamcheck.userspamcheckbison')),
                ('spamcheck', models.ForeignKey(blank=True, help_text='The spamcheck that encountered the error', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='error_logs', to='spamcheck.userspamcheck')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spamcheck_error_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Spamcheck Error Log',
                'verbose_name_plural': 'Spamcheck Error Logs',
                'db_table': 'spamcheck_error_logs',
                'ordering': ['-created_at'],
            },
        ),
    ]
