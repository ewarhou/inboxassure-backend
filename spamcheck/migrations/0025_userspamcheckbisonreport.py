# Generated by Django 5.0.2 on 2025-02-23 13:24

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('settings', '0012_alter_userbison_options_and_more'),
        ('spamcheck', '0024_add_last_emailguard_tag_to_bison_accounts'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserSpamcheckBisonReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email_account', models.EmailField(max_length=254)),
                ('report_link', models.URLField()),
                ('google_pro_score', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)])),
                ('outlook_pro_score', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)])),
                ('is_good', models.BooleanField(default=False, help_text='Whether this account meets the spamcheck conditions')),
                ('used_subject', models.TextField(blank=True, help_text='Subject used in the spamcheck campaign', null=True)),
                ('used_body', models.TextField(blank=True, help_text='Body used in the spamcheck campaign', null=True)),
                ('sending_limit', models.IntegerField(blank=True, help_text='Sending limit used in the campaign', null=True)),
                ('tags_list', models.TextField(blank=True, help_text='List of tags used in the campaign', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bison_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bison_spamcheck_reports', to='settings.userbison')),
                ('spamcheck_bison', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports', to='spamcheck.userspamcheckbison')),
            ],
            options={
                'db_table': 'user_spamcheck_bison_reports',
                'ordering': ['-created_at'],
            },
        ),
    ]
